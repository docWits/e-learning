JPA (Java Persistence API, API постоянного хранения объектовJava) обеспечивает модель персистентности POJО для объектно-реляционных отображений. Spring Data JPA позволяет хранить данные на основе этой модели.
Реализация доступа к данным может оказаться непростой задачей, ведь приходится иметь дело с соединениями, сеансами, обработкой исключений и другими вещами, даже в случае простых операций CRUD. Именно поэтому Spring Data JPA предоставляет дополнительный уровень функциональности: создание реализаций репозитория непосредственно из интерфейсов и использование соглашений для генерации запросов по названиям методов.
Вот некоторые из возможностей Spring Data JPA.
1. Поддержка спецификации JPA для различных поставщиков реализаций, например, Hibernate, Eclipse Link, Open JPA и т. д.
2. Поддержка репозиториев (концепция из Domain-Driven Design),
3. Аудит класса предметной области.
4. Поддержка предикатов Quesydsl (http://www.querydsl.com/) и типобезопасных JPA-запросов.
5. Постраничный вывод, сортировка, поддержка выполнения динамических запросов.
6. Поддержка аннотаций @Query.
7. Поддержка отображения сущностей на основе XML.
8. Конфигурация репозитория на основе JavaConfig с помощью аннотации @EnableJpaRepositories.
