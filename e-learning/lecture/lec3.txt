Можно сказать, что Spring Boot — следующий этап эволюции фреймворка Spring, но не поймите меня превратно: Spring Boot — вовсе не замена фреймворку Spring, поскольку Spring Boot и есть фреймворк Spring! Spring Boot можно рассматривать как новый способ простого и удобного создания приложений Spring.
Spring Boot упрощает способ разработки, поскольку позволяет легко создавать готовые к промышленной эксплуатации приложения на основе Spring, которые можно просто «запустить». Вы скоро узнаете, что с помощью Spring Boot можно создавать автономные приложения со встроенным сервером (по умолчанию Tomcat или Netty в случае использования новых веб-реактивных Можно сказать, что Spring Boot — следующий этап эволюции фреймворка Spring, но не поймите меня превратно: Spring Boot — вовсе не замена фреймворку Spring, поскольку Spring Boot и есть фреймворк Spring! Spring Boot можно рассматривать как новый способ простого и удобного создания приложений Spring.
Spring Boot упрощает способ разработки, поскольку позволяет легко создавать готовые к промышленной эксплуатации приложения на основе Spring, которые можно просто «запустить». Вы скоро узнаете, что с помощью Spring Boot можно создавать автономные приложения со встроенным сервером (по умолчанию Tomcat или Netty в случае использования новых веб-реактивных модулей), полностью готовые к запуску и развертыванию. 
Одна из важнейших возможностей Spring Boot — продуманная среда выполнения, благодаря которой разработчику легче следовать рекомендуемым практикам по созданию надежных, расширяемых и масштабируемых приложений Spring.
Проект Spring Boot можно найти по адресу https://projects.spring.io/spring-boot/. А чрезвычайно подробную документацию — вот здесь: https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/. Домашняя страница Spring Boot показана на рис. 2.1.
Spring Boot CLI (интерфейс командной строки) — один из многих способов создания приложений Spring, впрочем обычно используемый для прототипов приложений. Можете считать его «песочницей» Spring Boot. Эталонная его модель описана в следующих разделах. Я просто хотел, чтобы вы попробовали на вкус немножко возможностей Spring с помощью простых скриптов Groovy или Java. Лично для меня интерфейс командной строки Spring — неотъемлемая составная часть экосистемы Spring Boot.
Spring Boot CLI изучает код и пытается на основе аннотаций Spring MVC (@RestController и @GetMapping) выполнить его как веб-приложение, используя встроенный сервер Tomcat и запуская это веб-приложение на нем. Скрытая за кулисами магия состоит в том, что язык программирования Groovy обеспечивает простой способ перехвата операторов и динамического создания кода с помощью абстрактного синтаксического дерева (abstract syntax tree, AST); благодаря этому можно без проблем внедрить недостающий код Spring и выполнить его. Другими словами, Spring Boot CLI выясняет всю нужную информацию о вашем приложении и внедряет недостающие для создания и выполнения полноценного веб-приложения Spring части. 
